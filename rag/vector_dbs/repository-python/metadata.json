{
  "repo_name": "python",
  "source_file": "../repomix_md/repository-python/repomix-output-python-with-git.md",
  "file_size_mb": 7.2155961990356445,
  "build_time": "2025-06-15T11:29:44.905797",
  "processing_time": {
    "parse_time_seconds": 0.782035,
    "index_time_seconds": 109.245185,
    "total_time_seconds": 110.02722
  },
  "code_blocks_count": 203,
  "original_documents_count": {
    "basic": 2160,
    "enhanced": 2304,
    "compressed": 203
  },
  "filtered_documents_count": {
    "basic": 2000,
    "enhanced": 2000,
    "compressed": 203
  },
  "optimization_settings": {
    "max_documents_per_version": 2000,
    "min_content_length": 100,
    "batch_size": 100,
    "max_file_size_mb": 5.0
  },
  "total_commits": 457,
  "files_processed": [
    "ArithmeticAnalysis/Bisection.py",
    "ArithmeticAnalysis/Intersection.py",
    "ArithmeticAnalysis/LUdecomposition.py",
    "ArithmeticAnalysis/NeutonMethod.py",
    "ArithmeticAnalysis/NewtonRaphsonMethod.py",
    "boolean_algebra/Quine_McCluskey/QuineMcCluskey.py",
    "ciphers/affine_cipher.py",
    "ciphers/brute-force_caesar_cipher.py",
    "ciphers/caesar_cipher.py",
    "ciphers/cryptomath_module.py",
    "ciphers/Onepad_Cipher.py",
    "ciphers/playfair_cipher.py",
    "ciphers/Prehistoric Men.txt",
    "ciphers/rabin_miller.py",
    "ciphers/rot13.py",
    "ciphers/rsa_cipher.py",
    "ciphers/rsa_key_generator.py",
    "ciphers/simple_substitution_cipher.py",
    "ciphers/transposition_cipher_encrypt-decrypt_file.py",
    "ciphers/transposition_cipher.py",
    "ciphers/vigenere_cipher.py",
    "ciphers/XOR_cipher.py",
    "data_structures/AVL/AVL.py",
    "data_structures/Binary Tree/binary_search_tree.py",
    "data_structures/Binary Tree/FenwickTree.py",
    "data_structures/Binary Tree/LazySegmentTree.py",
    "data_structures/Binary Tree/SegmentTree.py",
    "data_structures/Graph/BellmanFord.py",
    "data_structures/Graph/BreadthFirstSearch.py",
    "data_structures/Graph/DepthFirstSearch.py",
    "data_structures/Graph/dijkstra_algorithm.py",
    "data_structures/Graph/Dijkstra.py",
    "data_structures/Graph/even_tree.py",
    "data_structures/Graph/FloydWarshall.py",
    "data_structures/Graph/Graph_list.py",
    "data_structures/Graph/Graph_matrix.py",
    "data_structures/Graph/Graph.py",
    "data_structures/hashing/number_theory/prime_numbers.py",
    "data_structures/hashing/__init__.py",
    "data_structures/hashing/double_hash.py",
    "data_structures/hashing/hash_table_with_linked_list.py",
    "data_structures/hashing/hash_table.py",
    "data_structures/hashing/quadratic_probing.py",
    "data_structures/Heap/heap.py",
    "data_structures/LinkedList/__init__.py",
    "data_structures/LinkedList/DoublyLinkedList.py",
    "data_structures/LinkedList/singly_LinkedList.py",
    "data_structures/Queue/DeQueue.py",
    "data_structures/Queue/QueueOnList.py",
    "data_structures/Queue/QueueOnPseudoStack.py",
    "data_structures/Stacks/__init__.py",
    "data_structures/Stacks/balanced_parentheses.py",
    "data_structures/Stacks/infix_to_postfix_conversion.py",
    "data_structures/Stacks/next.py",
    "data_structures/Stacks/stack.py",
    "data_structures/Trie/Trie.py",
    "data_structures/UnionFind/tests_union_find.py",
    "data_structures/UnionFind/union_find.py",
    "data_structures/Arrays.py",
    "dynamic_programming/abbreviation.py",
    "dynamic_programming/coin_change.py",
    "dynamic_programming/edit_distance.py",
    "dynamic_programming/fastfibonacci.py",
    "dynamic_programming/fibonacci.py",
    "dynamic_programming/FloydWarshall.py",
    "dynamic_programming/integer_partition.py",
    "dynamic_programming/k_means_clustering_tensorflow.py",
    "dynamic_programming/knapsack.py",
    "dynamic_programming/longest_common_subsequence.py",
    "dynamic_programming/longest_increasing_subsequence_O(nlogn).py",
    "dynamic_programming/longest_increasing_subsequence.py",
    "dynamic_programming/longest_sub_array.py",
    "dynamic_programming/matrix_chain_order.py",
    "dynamic_programming/max_sub_array.py",
    "dynamic_programming/minimum_partition.py",
    "File_Transfer_Protocol/ftp_client_server.py",
    "File_Transfer_Protocol/ftp_send_receive.py",
    "Graphs/a_star.py",
    "Graphs/basic-graphs.py",
    "Graphs/minimum_spanning_tree_kruskal.py",
    "Graphs/scc_kosaraju.py",
    "Graphs/tarjans_scc.py",
    "hashes/chaos_machine.py",
    "hashes/md5.py",
    "linear-algebra-python/src/lib.py",
    "linear-algebra-python/src/tests.py",
    "linear-algebra-python/README.md",
    "machine_learning/decision_tree.py",
    "machine_learning/gradient_descent.py",
    "machine_learning/k_means_clust.py",
    "machine_learning/linear_regression.py",
    "machine_learning/perceptron.py",
    "machine_learning/scoring_functions.py",
    "Maths/ModularExponential.py",
    "Maths/SimpsonRule.py",
    "Maths/TrapezoidalRule.py",
    "networking_flow/Ford_Fulkerson.py",
    "networking_flow/Minimum_cut.py",
    "Neural_Network/bpnn.py",
    "Neural_Network/convolution_neural_network.py",
    "Neural_Network/perceptron.py",
    "other/game_of_life/game_o_life.py",
    "other/anagrams.py",
    "other/binary_exponentiation_2.py",
    "other/binary_exponentiation.py",
    "other/detecting_english_programmatically.py",
    "other/Dictionary.txt",
    "other/euclidean_gcd.py",
    "other/FindingPrimes.py",
    "other/frequency_finder.py",
    "other/LinearCongruentialGenerator.py",
    "other/nested_brackets.py",
    "other/password_generator.py",
    "other/primelib.py",
    "other/sierpinski_triangle.py",
    "other/tower_of_hanoi.py",
    "other/two-sum.py",
    "other/word_patterns.py",
    "other/words",
    "Project Euler/Problem 01/sol1.py",
    "Project Euler/Problem 01/sol2.py",
    "Project Euler/Problem 01/sol3.py",
    "Project Euler/Problem 01/sol4.py",
    "Project Euler/Problem 02/sol1.py",
    "Project Euler/Problem 02/sol2.py",
    "Project Euler/Problem 02/sol3.py",
    "Project Euler/Problem 03/sol1.py",
    "Project Euler/Problem 03/sol2.py",
    "Project Euler/Problem 04/sol1.py",
    "Project Euler/Problem 04/sol2.py",
    "Project Euler/Problem 05/sol1.py",
    "Project Euler/Problem 05/sol2.py",
    "Project Euler/Problem 06/sol1.py",
    "Project Euler/Problem 06/sol2.py",
    "Project Euler/Problem 07/sol1.py",
    "Project Euler/Problem 07/sol2.py",
    "Project Euler/Problem 08/sol1.py",
    "Project Euler/Problem 10/sol1.py",
    "Project Euler/Problem 11/grid.txt",
    "Project Euler/Problem 11/sol1.py",
    "Project Euler/Problem 12/sol1.py",
    "Project Euler/Problem 13/sol1.py",
    "Project Euler/Problem 14/sol1.py",
    "Project Euler/Problem 15/sol1.py",
    "Project Euler/Problem 16/sol1.py",
    "Project Euler/Problem 17/sol1.py",
    "Project Euler/Problem 19/sol1.py",
    "Project Euler/Problem 20/sol1.py",
    "Project Euler/Problem 20/sol2.py",
    "Project Euler/Problem 21/sol1.py",
    "Project Euler/Problem 22/p022_names.txt",
    "Project Euler/Problem 22/sol1.py",
    "Project Euler/Problem 25/sol1.py",
    "Project Euler/Problem 28/sol1.py",
    "Project Euler/Problem 29/solution.py",
    "Project Euler/Problem 36/sol1.py",
    "Project Euler/Problem 40/sol1.py",
    "Project Euler/Problem 48/sol1.py",
    "Project Euler/Problem 52/sol1.py",
    "Project Euler/Problem 53/sol1.py",
    "Project Euler/Problem 76/sol1.py",
    "Project Euler/Problem 9/sol1.py",
    "Project Euler/Problem 9/sol2.py",
    "Project Euler/README.md",
    "searches/binary_search.py",
    "searches/interpolation_search.py",
    "searches/jump_search.py",
    "searches/linear_search.py",
    "searches/quick_select.py",
    "searches/ternary_search.py",
    "simple-client-server/client.py",
    "simple-client-server/README.md",
    "simple-client-server/server.py",
    "sorts/bogosort.py",
    "sorts/bubble_sort.py",
    "sorts/bucket_sort.py",
    "sorts/cocktail_shaker_sort.py",
    "sorts/counting_sort.py",
    "sorts/countingsort.py",
    "sorts/cyclesort.py",
    "sorts/external-sort.py",
    "sorts/gnome_sort.py",
    "sorts/heap_sort.py",
    "sorts/insertion_sort.py",
    "sorts/merge_sort.py",
    "sorts/normal_distribution_QuickSort_README.md",
    "sorts/pancake_sort.py",
    "sorts/quick_sort.py",
    "sorts/radix_sort.py",
    "sorts/random_normaldistribution_quicksort.py",
    "sorts/selection_sort.py",
    "sorts/shell_sort.py",
    "sorts/timsort.py",
    "sorts/topological_sort.py",
    "sorts/tree_sort.py",
    "strings/knuth-morris-pratt.py",
    "strings/min-cost-string-conversion.py",
    "strings/rabin-karp.py",
    "traversals/binary_tree_traversals.py",
    ".gitignore",
    ".travis.yml",
    "License",
    "Multi_Hueristic_Astar.py"
  ]
}